{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["lower","upper","numbers","symbols","App","useState","password","setpassword","class","value","readonly","id","placeholder","aria-label","onClick","passwordLength","parseInt","prompt","alert","includeUpper","window","confirm","includeLower","includeNumbers","includeSymbols","confirmedArr","passArr","concat","console","log","i","push","Math","floor","random","length","join","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAGIA,EAAQ,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACjHC,EAAQ,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7GC,EAAU,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC/CC,EAAU,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KA4ExCC,MA1Ef,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACJC,EADI,KACMC,EADN,KAiDb,OACE,sBAAKC,MAAM,UAAX,UACE,iCACE,sDAEF,sBAAKA,MAAM,OAAX,UACE,qBAAKA,MAAM,cAAX,SACE,uDAEF,qBAAKA,MAAM,YAAX,SACE,0BAAUC,MAAOH,EACfI,UAAQ,EACRC,GAAG,WACHC,YAAY,uBACZC,aAAW,yBAGf,qBAAKL,MAAM,cAAX,SACE,wBAAQA,MAAM,MAAMM,QAjE5B,WACE,IAAIC,EAAiBC,SAASC,OAAO,oEAErC,GAAIF,EAAiB,EACnBG,MAAM,uCAGR,GAAIH,EAAiB,IACnBG,MAAM,yCADR,CAKA,IAAIC,EAAgBC,OAAOC,QAAQ,gDAC/BC,EAAeF,OAAOC,QAAQ,gDAC9BE,EAAiBH,OAAOC,QAAQ,sCAChCG,EAAiBJ,OAAOC,QAAQ,sCAEpC,GAAKE,GAAmBJ,GAAiBK,GAAmBF,EAA5D,CAKA,IAAIG,EAAe,GACfC,EAAS,GAETH,IACHE,EAAeA,EAAaE,OAAOzB,IAGhCiB,IACHM,EAAeA,EAAaE,OAAO1B,IAGhCqB,IACHG,EAAeA,EAAaE,OAAO3B,IAGhCwB,IACHC,EAAeA,EAAaE,OAAOxB,IAEpCyB,QAAQC,IAAIJ,GACZ,IAAK,IAAIK,EAAI,EAAGA,EAAIf,EAAgBe,IAClCJ,EAAQK,KAAMN,EAAaO,KAAKC,MAAMD,KAAKE,SAAWT,EAAaU,UAErE5B,EAAYmB,EAAQU,KAAK,UA1BvBlB,MAAM,+CA+CF,wCC/DKmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cc777b45.chunk.js","sourcesContent":["import {useState} from 'react'\nimport './App.css';\n\nvar lower = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"u\",\"z\"];\nvar upper = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"];\nvar numbers = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"];\nvar symbols = [\"!\",\"#\",\"$\",\"^\",\"&\",\"*\",\"-\",\"=\",\"+\",\"_\",\"?\",];\n\nfunction App() {\n    const [password, setpassword] = useState(\"\")\n  function generatePassword(){\n    var passwordLength = parseInt(prompt(\"Enter the length of your password between 8 and 128 characters:\"));\n  \n    if (passwordLength < 8) {\n      alert('Must be at least 8 characters!');\n      return;\n    }\n    if (passwordLength > 128) {\n      alert('Must be less than 128 characters!');\n      return;\n    }\n\n    var includeUpper =  window.confirm(\"Would you like to include uppercase letters?\");\n    var includeLower = window.confirm(\"Would you like to include lowercase letters?\");\n    var includeNumbers = window.confirm(\"Would you like to include numbers?\");\n    var includeSymbols = window.confirm(\"Would you like to include symbols?\");\n  \n    if (!includeNumbers && !includeUpper && !includeSymbols && !includeLower) {\n      alert('Must select at least one of the criteria!');\n      return;\n    }\t\n  \n    var confirmedArr = [];\n    var passArr= [];\n  \n    if (includeNumbers){\n     confirmedArr = confirmedArr.concat(numbers);\n      \n    }\n    if (includeUpper){\n     confirmedArr = confirmedArr.concat(upper);\n    \n    }\n    if (includeLower){\n     confirmedArr = confirmedArr.concat(lower);\n    \n    }\n    if (includeSymbols){\n     confirmedArr = confirmedArr.concat(symbols);\n    }\n    console.log(confirmedArr)\n    for (var i = 0; i < passwordLength; i++) {\n      passArr.push (confirmedArr[Math.floor(Math.random() * confirmedArr.length)]); \n    }\n    setpassword(passArr.join(\"\"))\n  }\n\n  return (\n    <div class=\"wrapper\">\n      <header>\n        <h1>Password Generator</h1>\n      </header>\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h2>Generate a Password</h2>\n        </div>\n        <div class=\"card-body\">\n          <textarea value={password} \n            readonly\n            id=\"password\"\n            placeholder=\"Your Secure Password\"\n            aria-label=\"Generated Password\"\n          ></textarea>\n        </div>\n        <div class=\"card-footer\">\n          <button class=\"btn\" onClick={generatePassword} >Generate Password</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}